CREATE TABLE offers (
    id BIGSERIAL PRIMARY KEY,
    edbo_id BIGINT NOT NULL,
    name VARCHAR(255) NOT NULL,
    major_id BIGINT NOT NULL REFERENCES majors(id),
    university_id BIGINT NOT NULL REFERENCES universities(id),
    faculty VARCHAR(255) NOT NULL,
    education_form VARCHAR(255) NOT NULL,
    budget_places INTEGER NOT NULL,
    budget_places_count INTEGER NOT NULL DEFAULT 0,
    contract_places INTEGER NOT NULL,
    contract_places_count INTEGER NOT NULL DEFAULT 0,
    quota1_places INTEGER NOT NULL,
    quota1_places_count INTEGER NOT NULL DEFAULT 0,
    quota2_places INTEGER NOT NULL,
    quota2_places_count INTEGER NOT NULL DEFAULT 0,
    min_uk_lang_score INTEGER NOT NULL CHECK (min_uk_lang_score BETWEEN 100 AND 200),
    min_math_score INTEGER NOT NULL CHECK (min_math_score BETWEEN 100 AND 200),
    min_history_score INTEGER NOT NULL CHECK (min_history_score BETWEEN 100 AND 200),
    min_uk_lit_score INTEGER NOT NULL CHECK (min_uk_lit_score BETWEEN 100 AND 200),
    min_foreign_lang_score INTEGER NOT NULL CHECK (min_foreign_lang_score BETWEEN 100 AND 200),
    min_biology_score INTEGER NOT NULL CHECK (min_biology_score BETWEEN 100 AND 200),
    min_geography_score INTEGER NOT NULL CHECK (min_geography_score BETWEEN 100 AND 200),
    min_physics_score INTEGER NOT NULL CHECK (min_physics_score BETWEEN 100 AND 200),
    min_chemistry_score INTEGER NOT NULL CHECK (min_chemistry_score BETWEEN 100 AND 200),
    min_competition_score INTEGER NOT NULL CHECK (min_competition_score BETWEEN 100 AND 200),
    additional_points INTEGER NOT NULL CHECK (additional_points >= 0),
    region_coef DOUBLE PRECISION NOT NULL CHECK (region_coef BETWEEN 1 AND 2)
);